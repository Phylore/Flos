"""Reset

Revision ID: 50deb1d4337f
Revises: 
Create Date: 2025-06-26 15:46:12.686818

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '50deb1d4337f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benutzer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('passwort_hash', sa.String(), nullable=False),
    sa.Column('rolle', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('aktiv', sa.Boolean(), nullable=False),
    sa.Column('gesperrt', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('geraete_test_schritt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('beschreibung', sa.Text(), nullable=True),
    sa.Column('modul_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hersteller',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('kategorie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('lieferant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('kontakt', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('teilvorlage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zustaende',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('kategorie', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value', 'kategorie', name='uix_value_kategorie')
    )
    op.create_table('charge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('angelegt_am', sa.DateTime(), nullable=True),
    sa.Column('lieferant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lieferant_id'], ['lieferant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unterkategorie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('kategorie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['kategorie_id'], ['kategorie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modell',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('kategorie_id', sa.Integer(), nullable=False),
    sa.Column('unterkategorie_id', sa.Integer(), nullable=True),
    sa.Column('hersteller_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hersteller_id'], ['hersteller.id'], ),
    sa.ForeignKeyConstraint(['kategorie_id'], ['kategorie.id'], ),
    sa.ForeignKeyConstraint(['unterkategorie_id'], ['unterkategorie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('modell', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_modell_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_modell_name'), ['name'], unique=True)

    op.create_table('geraete',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qrcode', sa.String(), nullable=False),
    sa.Column('modell_id', sa.Integer(), nullable=False),
    sa.Column('charge_id', sa.Integer(), nullable=True),
    sa.Column('zustand_id', sa.Integer(), nullable=False),
    sa.Column('benutzer_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), server_default='Unbekannt', nullable=False),
    sa.Column('ausgepackt', sa.Boolean(), nullable=True),
    sa.Column('gereinigt', sa.Boolean(), nullable=True),
    sa.Column('getestet', sa.Boolean(), nullable=True),
    sa.Column('bilder_einpackfertig', sa.Boolean(), nullable=True),
    sa.Column('bilder_fertig', sa.Boolean(), nullable=True),
    sa.Column('einpackbereit', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['benutzer_id'], ['benutzer.id'], name='fk_geraete_benutzer_id'),
    sa.ForeignKeyConstraint(['charge_id'], ['charge.id'], name='fk_geraete_charge_id'),
    sa.ForeignKeyConstraint(['modell_id'], ['modell.id'], name='fk_geraete_modell_id'),
    sa.ForeignKeyConstraint(['zustand_id'], ['zustaende.id'], name='fk_geraete_zustand_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('qrcode')
    )
    op.create_table('geraet_bild',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geraet_id', sa.Integer(), nullable=False),
    sa.Column('pfad', sa.String(length=255), nullable=False),
    sa.Column('beschreibung', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['geraet_id'], ['geraete.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geraete_test_durchlauf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geraet_id', sa.Integer(), nullable=False),
    sa.Column('benutzer_id', sa.Integer(), nullable=False),
    sa.Column('zeitpunkt', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['benutzer_id'], ['benutzer.id'], ),
    sa.ForeignKeyConstraint(['geraet_id'], ['geraete.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('geraet_id', sa.Integer(), nullable=False),
    sa.Column('benutzer_id', sa.Integer(), nullable=False),
    sa.Column('aktion', sa.String(), nullable=False),
    sa.Column('zeitpunkt', sa.DateTime(), nullable=True),
    sa.Column('kommentar', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['benutzer_id'], ['benutzer.id'], ),
    sa.ForeignKeyConstraint(['geraet_id'], ['geraete.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modul',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('modell_id', sa.Integer(), nullable=True),
    sa.Column('reihenfolge', sa.Integer(), nullable=True),
    sa.Column('geraet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['geraet_id'], ['geraete.id'], ),
    sa.ForeignKeyConstraint(['modell_id'], ['modell.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geraete_test_ergebnis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('durchlauf_id', sa.Integer(), nullable=False),
    sa.Column('schritt_id', sa.Integer(), nullable=False),
    sa.Column('bestanden', sa.Boolean(), nullable=True),
    sa.Column('kommentar', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['durchlauf_id'], ['geraete_test_durchlauf.id'], ),
    sa.ForeignKeyConstraint(['schritt_id'], ['geraete_test_schritt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teil',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('modul_id', sa.Integer(), nullable=True),
    sa.Column('geraet_id', sa.Integer(), nullable=True),
    sa.Column('anwesenheit_id', sa.Integer(), nullable=True),
    sa.Column('sauberkeit_id', sa.Integer(), nullable=True),
    sa.Column('beschaedigung_id', sa.Integer(), nullable=True),
    sa.Column('teilvorlage_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['anwesenheit_id'], ['zustaende.id'], ),
    sa.ForeignKeyConstraint(['beschaedigung_id'], ['zustaende.id'], ),
    sa.ForeignKeyConstraint(['geraet_id'], ['geraete.id'], ),
    sa.ForeignKeyConstraint(['modul_id'], ['modul.id'], ),
    sa.ForeignKeyConstraint(['sauberkeit_id'], ['zustaende.id'], ),
    sa.ForeignKeyConstraint(['teilvorlage_id'], ['teilvorlage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teil')
    op.drop_table('geraete_test_ergebnis')
    op.drop_table('modul')
    op.drop_table('historie')
    op.drop_table('geraete_test_durchlauf')
    op.drop_table('geraet_bild')
    op.drop_table('geraete')
    with op.batch_alter_table('modell', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_modell_name'))
        batch_op.drop_index(batch_op.f('ix_modell_id'))

    op.drop_table('modell')
    op.drop_table('unterkategorie')
    op.drop_table('charge')
    op.drop_table('zustaende')
    op.drop_table('teilvorlage')
    op.drop_table('lieferant')
    op.drop_table('kategorie')
    op.drop_table('hersteller')
    op.drop_table('geraete_test_schritt')
    op.drop_table('benutzer')
    # ### end Alembic commands ###
